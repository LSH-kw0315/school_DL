{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"11jEFEhdyYDwuS4eHsb9-MzjTUOdLqXTA","timestamp":1710484483277}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# NumPy Arrays - Part 2<br>\n","NumPy - 대규모의 다차원 배열을 쉽게 처리할 때 사용하는 파이썬 라이브러리<br>\n","\n","by uramoon@kw.ac.kr<br>\n","원본 출처: Introduction to Deep Learning at Carnegie Mellon University (https://deeplearning.cs.cmu.edu/S22/index.html)"],"metadata":{"id":"f7Phz-Tu8Jy4"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"2cEyUUzo76v1","executionInfo":{"status":"ok","timestamp":1710484497736,"user_tz":-540,"elapsed":9,"user":{"displayName":"이승헌","userId":"10348056862918872158"}}},"outputs":[],"source":["# Import the NumPy\n","import numpy as np"]},{"cell_type":"markdown","source":["## 0. 다차원 배열의 이해"],"metadata":{"id":"DOFbU78k9uXU"}},{"cell_type":"code","source":["arr = np.array([1, 2, 3, 4])\n","\n","# 1차원 배열\n","print(arr)"],"metadata":{"id":"O9_xErVT9Oho","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710484497737,"user_tz":-540,"elapsed":9,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"f1fa0aed-fe46-4e15-858c-9b7aec319a07"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4]\n"]}]},{"cell_type":"code","source":["# 2차원 배열로 해석하기\n","print(arr.reshape(4, 1)) #reshape는 가능할 때만 동작한다.. (d차, d-1차, ... ,1차개수)\n","print(arr.reshape(2, 2))\n","print(arr.reshape(1, 4))"],"metadata":{"id":"UMsbm41j42OT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710484497737,"user_tz":-540,"elapsed":5,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"56168101-3a8a-4e45-af44-f5af947e3ee5"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1]\n"," [2]\n"," [3]\n"," [4]]\n","[[1 2]\n"," [3 4]]\n","[[1 2 3 4]]\n"]}]},{"cell_type":"markdown","source":["***TODO: 어떻게 해석할 수 있을까요?***\n","1. arr.reshape(4, 1): 길이가 1인 배열이 4개가 있는 배열\n","2. arr.reshape(2, 2): 길이 2인 배열이 두 개 있음. (2 by 2 행렬, 행:2개 열:2개)\n","3. arr.reshape(1, 4): 길이가 4인 배열이 1개가 있는 배열"],"metadata":{"id":"UBIwi96j5IJ1"}},{"cell_type":"markdown","source":["## 1. 배열 초기화\n","\n"],"metadata":{"id":"oEBtH42k8cDM"}},{"cell_type":"markdown","source":["### a. 비어 있는 (초기화 안된) / 0으로 채워진 / 1로 채워진 / 특정 값으로 채워진 배열 만들기\n","1. numpy.empty (https://numpy.org/doc/stable/reference/generated/numpy.empty.html)\n","2. numpy.zeros (https://numpy.org/doc/stable/reference/generated/numpy.zeros.html#numpy.zeros)\n","3. numpy.ones (https://numpy.org/doc/stable/reference/generated/numpy.ones.html#numpy.ones)\n","4. numpy.full (https://numpy.org/doc/stable/reference/generated/numpy.full.html#numpy.full)"],"metadata":{"id":"1xv3d8__-YVP"}},{"cell_type":"code","source":["# 비어있는 2 x 2 배열 만들기\n","empty_arr = np.empty((2, 3,2)) #empty((d차, d-1차, ...,1차))\n","print(empty_arr)"],"metadata":{"id":"f3dgMQU-8nR5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485151272,"user_tz":-540,"elapsed":5,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"1cb04010-983e-4765-8379-a313fb7b7b79"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[5.00551627e-310 0.00000000e+000]\n","  [0.00000000e+000 0.00000000e+000]\n","  [0.00000000e+000 0.00000000e+000]]\n","\n"," [[0.00000000e+000 0.00000000e+000]\n","  [0.00000000e+000 0.00000000e+000]\n","  [0.00000000e+000 0.00000000e+000]]]\n"]}]},{"cell_type":"markdown","source":["***TODO: numpy.empty의 장점과 단점은 무엇일까요?(상기 API 문서 참조)***\n","* 장점: 윗 문단의 reshape를 통해 2차원 배열을 만드는 방법보다는 편리하다.\n","* 단점: 쓰레기 값이 들어간다. 즉, 초기화를 직접 해줘야 한다."],"metadata":{"id":"kp2jVZWS6dge"}},{"cell_type":"code","source":["# TODO: 모두 0으로 채워진 2 x 3 배열 만들기\n","zero_arr = np.zeros((2,3))\n","print(zero_arr)"],"metadata":{"id":"QhLrUmO6-FyW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485849334,"user_tz":-540,"elapsed":4,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"73c46c61-251a-40e9-9b63-3ca69544e6b6"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 0. 0.]\n"," [0. 0. 0.]]\n"]}]},{"cell_type":"code","source":["# TODO: 모두 1로 채워진 4 x 2 배열 만들기\n","ones_arr = np.ones((4,2))\n","print(ones_arr)"],"metadata":{"id":"Gn-tjKIg-L90","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485859950,"user_tz":-540,"elapsed":365,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"eda17b44-c66e-4580-d8b2-60e833561ab5"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1. 1.]\n"," [1. 1.]\n"," [1. 1.]\n"," [1. 1.]]\n"]}]},{"cell_type":"code","source":["# TODO: 모두 10으로 채워진 2 x 2 배열 만들기\n","tens_arr = np.full((2,2),10)\n","print(tens_arr)"],"metadata":{"id":"V2Wnoinl-RJG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485206978,"user_tz":-540,"elapsed":7,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"cba27ecf-fd72-4f4a-fdec-daaedfe8731a"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["[[10 10]\n"," [10 10]]\n"]}]},{"cell_type":"markdown","source":["### b. 주어진 배열과 동일한 모양의 배열 만들기\n","1. numpy.zeros_like (https://numpy.org/doc/stable/reference/generated/numpy.zeros_like.html#numpy.zeros_like)\n","2. numpy.ones_like (https://numpy.org/doc/stable/reference/generated/numpy.ones_like.html#numpy.ones_like)\n","3. numpy.full_like (https://numpy.org/doc/stable/reference/generated/numpy.full_like.html#numpy.full_like)"],"metadata":{"id":"2w0KRgvU-j-5"}},{"cell_type":"code","source":["# TODO: ones_arr과 동일한 모양에 0으로 채워진 배열 만들기\n","zeros_like_arr = np.zeros_like(ones_arr)\n","print(zeros_like_arr)"],"metadata":{"id":"03pOKkHP-vr1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485251690,"user_tz":-540,"elapsed":573,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"d5d22e28-e3c5-41dc-e5e3-ba85a9d31c81"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 0. 0. 0.]\n"," [0. 0. 0. 0.]]\n"]}]},{"cell_type":"code","source":["# TODO: zeros_arr과 동일한 모양에 1로 채워진 배열 만들기\n","ones_like_arr = np.ones_like(zero_arr)\n","print(ones_like_arr)"],"metadata":{"id":"IOdunDii-99b","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485297696,"user_tz":-540,"elapsed":311,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"0b22b473-09dc-4607-8bcd-03564f3c08cd"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1. 1.]\n"," [1. 1.]\n"," [1. 1.]]\n"]}]},{"cell_type":"code","source":["# TODO: zeros_arr과 동일한 모양에 0.1로 채워진 배열 만들기\n","full_like_arr = np.full_like(zero_arr,0.1)\n","print(full_like_arr)"],"metadata":{"id":"4fdlHNOx--0_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485325519,"user_tz":-540,"elapsed":703,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"5906dcdc-7552-4a50-ee3f-d65b9a345527"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.1 0.1]\n"," [0.1 0.1]\n"," [0.1 0.1]]\n"]}]},{"cell_type":"markdown","source":["### c. 기존의 데이터로 배열 만들기\n","1. numpy.array (https://numpy.org/doc/stable/reference/generated/numpy.array.html)\n","2. numpy.loadtxt (https://numpy.org/doc/stable/reference/generated/numpy.loadtxt.html) (텍스트 파일에 저장했다 불러오기, 생략)\n","3. numpy.load (https://numpy.org/doc/stable/reference/generated/numpy.load.html) (.npy, .npz 등에 저장했다 불러오기, 생략)"],"metadata":{"id":"egqPXV02_Q2v"}},{"cell_type":"code","source":["# TODO: new_list 리스트로 배열 만들기\n","new_list = [1, 2, 3, 4]\n","arr_from_list = np.array(new_list)\n","print(\"An array from given list is \\n\", arr_from_list, \" with dimensions \", arr_from_list.shape, \"\\n\")"],"metadata":{"id":"vTsEfE5g_VKn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485366745,"user_tz":-540,"elapsed":429,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"c3d3a8af-7406-484b-f810-aad5faeff956"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["An array from given list is \n"," [1 2 3 4]  with dimensions  (4,) \n","\n"]}]},{"cell_type":"markdown","source":["### d. 주어진 숫자 범위에서 만들기\n","1. numpy.arange (https://numpy.org/doc/stable/reference/generated/numpy.arange.html)\n","2. numpy.linspace (https://numpy.org/doc/stable/reference/generated/numpy.linspace.html)"],"metadata":{"id":"0Z5lKuyYAZZX"}},{"cell_type":"code","source":["# TODO: 0부터 9까지 모든 정수를 담고 있는 배열 만들기\n","range_arr =np.arange(10)\n","print(\"An array given range is \\n\", range_arr, \" with dimensions \", range_arr.shape, \"\\n\")"],"metadata":{"id":"ewS2vUv-Admk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485407313,"user_tz":-540,"elapsed":492,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"6a54661d-665b-4e8f-8877-e06917195cb1"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["An array given range is \n"," [0 1 2 3 4 5 6 7 8 9]  with dimensions  (10,) \n","\n"]}]},{"cell_type":"code","source":["# TODO: 2부터 3까지 [2, 3) 동일 간격으로 다섯 개의 실수를 포함하는 배열 만들기 (2는 포함, 3은 미포함)\n","linspace_arr = np.linspace(2.0, 3.0, num=5, endpoint=False)\n","print(\"An evenly spaced array given range is \\n\", linspace_arr, \" with dimensions \", linspace_arr.shape, \"\\n\")"],"metadata":{"id":"eaZaZ_dnAgjn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485649412,"user_tz":-540,"elapsed":507,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"37889701-fecb-4dfc-d65d-d5bfcb8736e2"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["An evenly spaced array given range is \n"," [2.  2.2 2.4 2.6 2.8]  with dimensions  (5,) \n","\n"]}]},{"cell_type":"markdown","source":["### e. 무작위 값으로 채운 배열 만들기\n","\n","1. numpy.random.rand (https://numpy.org/doc/stable/reference/random/generated/numpy.random.rand.html)\n","2. numpy.random.randint (https://numpy.org/doc/stable/reference/random/generated/numpy.random.randint.html)\n","3. numpy.random.randn (https://numpy.org/doc/stable/reference/random/generated/numpy.random.randn.html)"],"metadata":{"id":"Uw6CMn_nAqDs"}},{"cell_type":"code","source":["# TODO: [0, 1)에서 추출한 무작위 실수로 3 x 2 배열 만들기\n","uniform_rand_arr =np.random.rand(3,2)\n","print(\"A random array from a uniform distribution is \\n\", uniform_rand_arr, \" with dimensions \", uniform_rand_arr.shape, \"\\n\")"],"metadata":{"id":"dJS_5WXhAvMu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710485981069,"user_tz":-540,"elapsed":4,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"e5add89c-5a94-4035-ca6a-f8ed69d9697b"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["A random array from a uniform distribution is \n"," [[0.7346414  0.27929521]\n"," [0.5771857  0.19580239]\n"," [0.35425915 0.22531809]]  with dimensions  (3, 2) \n","\n"]}]},{"cell_type":"code","source":["# TODO: [0, 5)에서 추출한 무작위 정수로 2 x 4 배열 만들기\n","range_rand_int_arr = np.random.randint(0,5,(2,4))\n","print(\"A random integer array from a range is \\n\", range_rand_int_arr, \" with dimensions \", range_rand_int_arr.shape, \"\\n\")"],"metadata":{"id":"RTxD3yZeAyyk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710486043274,"user_tz":-540,"elapsed":4,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"05c49f0a-d0ab-4313-d978-95eaf7289c92"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["A random integer array from a range is \n"," [[3 0 1 2]\n"," [3 1 0 4]]  with dimensions  (2, 4) \n","\n"]}]},{"cell_type":"markdown","source":["정규분포 $\\mathcal{N}(\\mu, \\sigma^2)$에서 추출한 표본들로 배열 만들 때:<br>\n","$\\mu$ + $\\sigma$ * np.random.randn(...)"],"metadata":{"id":"ckWKDzXE7ywQ"}},{"cell_type":"code","source":["# TODO: 평균: 3, 표준편차: 2.5인 정규분포에서 추출한 무작위 실수로 2 x 4 배열 만들기\n","mu = 3\n","sigma = 2.5\n","sample_normal_arr = mu + sigma * np.random.randn(2,4)\n","print(\"A random array from a gaussian distribution is \\n\", sample_normal_arr)\n","print(\"with mu: \", mu)\n","print(\"with sigma: \", sigma)\n","print(\"with dimensions \", sample_normal_arr.shape)"],"metadata":{"id":"Ngpy3oy2A1Uv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710486185197,"user_tz":-540,"elapsed":594,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"e4285a3e-5f71-43b1-dc0d-a44eb1689b35"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["A random array from a gaussian distribution is \n"," [[-0.99951326  0.40836378  0.90586099  3.69528039]\n"," [ 3.24414146  6.16617947  0.24307565  2.49490987]]\n","with mu:  3\n","with sigma:  2.5\n","with dimensions  (2, 4)\n"]}]}]}