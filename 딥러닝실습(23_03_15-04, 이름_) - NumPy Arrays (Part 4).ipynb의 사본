{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"12WNdl0f0p5axRJ-rpFmKoM8wlMVwCkgW","timestamp":1710486785332}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# NumPy Arrays - Part 4<br>\n","\n","by uramoon@kw.ac.kr<br>\n","원본 출처: Introduction to Deep Learning at Carnegie Mellon University (https://deeplearning.cs.cmu.edu/S22/index.html)"],"metadata":{"id":"MdE1jk2Ek8s5"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"JsBJNZ7-k6Fn","executionInfo":{"status":"ok","timestamp":1710486855365,"user_tz":-540,"elapsed":8,"user":{"displayName":"이승헌","userId":"10348056862918872158"}}},"outputs":[],"source":["# Import the NumPy\n","import numpy as np"]},{"cell_type":"markdown","source":["## Reshaping Arrays (배열의 모양을 다르게 해석하기)<br>\n","\n","Array reshaping은 배열안의 데이터는 그대로 두고 모양을 바꿔 해석을 다르게 하는 것입니다.\n","\n","예를 들어 (4,) 모양의 1차원 배열 [1, 2, 3, 4]는 (4, 1) 모양의 2차원 배열 [[1], [2], [3], [4]], <br> 또는 (2, 2) 모양의 2차원 배열 [[1, 2], [3, 4]] 및 (1, 4) 모양의 2차원 배열 [[1, 2, 3, 4]]로 형태를 바꿔 해석할 수도 있습니다.\n","\n","- (4)는 괄호 안에 들어있는 숫자 4를 의미\n","- (4,)는 1차원 배열의 생김새를 의미(길이:4)"],"metadata":{"id":"5o4Of13sk_vc"}},{"cell_type":"markdown","source":["### 동일 차원으로 reshaping"],"metadata":{"id":"O4a8i5qLlwgq"}},{"cell_type":"code","source":["s = np.random.rand(3, 4, 5)\n","print(f\"원래 모양: {s.shape}\")"],"metadata":{"id":"KMz5d2gOl0Eb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710486866195,"user_tz":-540,"elapsed":399,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"73ccf1d3-b111-4b73-a472-3c53ba263032"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["원래 모양: (3, 4, 5)\n"]}]},{"cell_type":"markdown","source":["***TODO: s의 전체 원소 개수 구하기***\n","* Q: 어떻게 계산할 수 있을까요?\n","* A: 3 x (4 x 5 ) = 60"],"metadata":{"id":"s1mp1lJDoaeK"}},{"cell_type":"code","source":["s.size"],"metadata":{"id":"11CYWGKMl3RM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710486909008,"user_tz":-540,"elapsed":339,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"501e5515-08c4-4a35-a324-e37fce4f8969"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["60"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# s 내용 확인하기\n","print(s)"],"metadata":{"id":"dICkdQ4Bl55_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710486910873,"user_tz":-540,"elapsed":5,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"188badea-cdf2-4ffe-88f7-ae10f75dd3e4"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[0.17571747 0.92656192 0.81300153 0.39962791 0.10207651]\n","  [0.51940733 0.61872477 0.13924042 0.52391245 0.17507347]\n","  [0.81517323 0.08962648 0.2881297  0.67196562 0.2888705 ]\n","  [0.82548407 0.38303709 0.09381986 0.81102244 0.12211291]]\n","\n"," [[0.02026717 0.67371889 0.84497484 0.56724714 0.97004519]\n","  [0.34072539 0.41366057 0.66290261 0.11439044 0.849074  ]\n","  [0.97539895 0.12607584 0.53772745 0.95663461 0.11889744]\n","  [0.76628053 0.19791124 0.97775515 0.48911515 0.581598  ]]\n","\n"," [[0.79097137 0.80806893 0.40444738 0.63936121 0.82090975]\n","  [0.89044371 0.78798316 0.49681729 0.49810879 0.12642661]\n","  [0.18454611 0.4491109  0.73505899 0.62769453 0.55293755]\n","  [0.9367961  0.15320575 0.24660021 0.25247588 0.32060977]]]\n"]}]},{"cell_type":"code","source":["# TODO: s를 (2, 6, 5)로 reshape하여 s1에 저장하기\n","s1 = s.reshape(2,6 ,5 )\n","print(f\"s1의 모양: {s1.shape}\")"],"metadata":{"id":"rEp81Dn3l9uP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710486929842,"user_tz":-540,"elapsed":291,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"8c35e1c1-22b2-4b4e-efbf-bc363871d370"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["s1의 모양: (2, 6, 5)\n"]}]},{"cell_type":"code","source":["# s와 s1의 각 원소값과 위치는 동일한 것을 확인해보세요.\n","print(s1)"],"metadata":{"id":"XUAejbTjmCkQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710486934963,"user_tz":-540,"elapsed":494,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"c03b7e6e-eddf-4fc4-f73f-f20c64726ff1"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[0.17571747 0.92656192 0.81300153 0.39962791 0.10207651]\n","  [0.51940733 0.61872477 0.13924042 0.52391245 0.17507347]\n","  [0.81517323 0.08962648 0.2881297  0.67196562 0.2888705 ]\n","  [0.82548407 0.38303709 0.09381986 0.81102244 0.12211291]\n","  [0.02026717 0.67371889 0.84497484 0.56724714 0.97004519]\n","  [0.34072539 0.41366057 0.66290261 0.11439044 0.849074  ]]\n","\n"," [[0.97539895 0.12607584 0.53772745 0.95663461 0.11889744]\n","  [0.76628053 0.19791124 0.97775515 0.48911515 0.581598  ]\n","  [0.79097137 0.80806893 0.40444738 0.63936121 0.82090975]\n","  [0.89044371 0.78798316 0.49681729 0.49810879 0.12642661]\n","  [0.18454611 0.4491109  0.73505899 0.62769453 0.55293755]\n","  [0.9367961  0.15320575 0.24660021 0.25247588 0.32060977]]]\n"]}]},{"cell_type":"markdown","source":["### 다른 차원으로 reshaping"],"metadata":{"id":"2h9NzVWqmFIJ"}},{"cell_type":"code","source":["# TODO: 0부터 119까지 120개의 정수로 이루어진 1차원 배열을 간단하게 만들어보세요.\n","# numpy.arange (https://numpy.org/doc/stable/reference/generated/numpy.arange.html)\n","r = np.arange(120)"],"metadata":{"id":"kd7rm9F8mHjg","executionInfo":{"status":"ok","timestamp":1710486962317,"user_tz":-540,"elapsed":5,"user":{"displayName":"이승헌","userId":"10348056862918872158"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["print(f\"원래 모양: {r.shape}\")"],"metadata":{"id":"JxsZO9FlmJab","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710486967341,"user_tz":-540,"elapsed":308,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"7abc72f9-da10-42cd-9f18-578db936323b"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["원래 모양: (120,)\n"]}]},{"cell_type":"code","source":["# TODO: (120,) -> (3, 4, 10)\n","# 원소개수는 120개로 동일합니다.\n","r1 = r.reshape(3,4,10)\n","print(f\"r1의 모양: {r1.shape}\")"],"metadata":{"id":"yXX5yQiSmPLi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710486990691,"user_tz":-540,"elapsed":409,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"2c5f45ce-a868-4285-d5ed-1070e84d5d95"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["r1의 모양: (3, 4, 10)\n"]}]},{"cell_type":"code","source":["# r과 r1을 비교해보세요.\n","print(r)\n","print(r1)"],"metadata":{"id":"qTEazsfjmWBW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710486993072,"user_tz":-540,"elapsed":3,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"c8bfa09f-8d74-4f22-c62d-69e044e4cc13"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n","  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35\n","  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53\n","  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71\n","  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89\n","  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107\n"," 108 109 110 111 112 113 114 115 116 117 118 119]\n","[[[  0   1   2   3   4   5   6   7   8   9]\n","  [ 10  11  12  13  14  15  16  17  18  19]\n","  [ 20  21  22  23  24  25  26  27  28  29]\n","  [ 30  31  32  33  34  35  36  37  38  39]]\n","\n"," [[ 40  41  42  43  44  45  46  47  48  49]\n","  [ 50  51  52  53  54  55  56  57  58  59]\n","  [ 60  61  62  63  64  65  66  67  68  69]\n","  [ 70  71  72  73  74  75  76  77  78  79]]\n","\n"," [[ 80  81  82  83  84  85  86  87  88  89]\n","  [ 90  91  92  93  94  95  96  97  98  99]\n","  [100 101 102 103 104 105 106 107 108 109]\n","  [110 111 112 113 114 115 116 117 118 119]]]\n"]}]},{"cell_type":"code","source":["# TODO: r1을 reshape하여 r2에 저장하세요.\n","# (3, 4, 10) -> (6, 20)\n","r2 = r1.reshape(6,20)\n","print(f\"r2의 모양: {r2.shape}\")"],"metadata":{"id":"uGUy-vPkmZOU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487011556,"user_tz":-540,"elapsed":408,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"7242414e-9ae0-44d0-ac38-a9ea8819be73"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["r2의 모양: (6, 20)\n"]}]},{"cell_type":"code","source":["# r2와 r1, r을 비교해보세요.\n","print(r1)\n","print(r2)"],"metadata":{"id":"U21IEB5Vmb--","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487013873,"user_tz":-540,"elapsed":386,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"69689ecf-0f81-44a3-fe57-45f09742953e"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[  0   1   2   3   4   5   6   7   8   9]\n","  [ 10  11  12  13  14  15  16  17  18  19]\n","  [ 20  21  22  23  24  25  26  27  28  29]\n","  [ 30  31  32  33  34  35  36  37  38  39]]\n","\n"," [[ 40  41  42  43  44  45  46  47  48  49]\n","  [ 50  51  52  53  54  55  56  57  58  59]\n","  [ 60  61  62  63  64  65  66  67  68  69]\n","  [ 70  71  72  73  74  75  76  77  78  79]]\n","\n"," [[ 80  81  82  83  84  85  86  87  88  89]\n","  [ 90  91  92  93  94  95  96  97  98  99]\n","  [100 101 102 103 104 105 106 107 108 109]\n","  [110 111 112 113 114 115 116 117 118 119]]]\n","[[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n","   18  19]\n"," [ 20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37\n","   38  39]\n"," [ 40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57\n","   58  59]\n"," [ 60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77\n","   78  79]\n"," [ 80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97\n","   98  99]\n"," [100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117\n","  118 119]]\n"]}]},{"cell_type":"markdown","source":["## 배열 펼치기 (Flattening)\n","배열 펼치기는 다차원 배열을 일차원으로 만들어줍니다.<br>\n","일반적인 다층 퍼셉트론 인공 신경망은 일차원 배열을 입력으로 받기 때문에<br> MNIST 데이터셋을 사용하면 28 x 28 모양의 이차원 배열을 길이 784의 일차원 배열로 만들어 사용합니다."],"metadata":{"id":"RpaG2yDgm4XH"}},{"cell_type":"code","source":["k = np.random.rand(5, 6)\n","k"],"metadata":{"id":"-EcIxVhPnf-1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487025319,"user_tz":-540,"elapsed":430,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"02d2062a-7239-47d5-ec1a-3edf0bffaad1"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.38338687, 0.74973815, 0.91794036, 0.04007929, 0.81028677,\n","        0.65296833],\n","       [0.74062841, 0.8868006 , 0.55762298, 0.79574465, 0.23191995,\n","        0.11464657],\n","       [0.08967736, 0.04911439, 0.83504305, 0.95459413, 0.94653966,\n","        0.57877081],\n","       [0.28585171, 0.85938408, 0.9527936 , 0.3857041 , 0.78519594,\n","        0.58322747],\n","       [0.14522708, 0.9746622 , 0.08855253, 0.73135131, 0.52890178,\n","        0.98091496]])"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["### 기본 순서대로 펼치기"],"metadata":{"id":"vo3DsO7Znk7D"}},{"cell_type":"code","source":["# k와 k1을 비교해보세요.\n","k1 = k.flatten()\n","k1"],"metadata":{"id":"RasJm2OgniU1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487031361,"user_tz":-540,"elapsed":508,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"f518d15f-52d0-4c6e-b0f9-845fb823b2df"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.38338687, 0.74973815, 0.91794036, 0.04007929, 0.81028677,\n","       0.65296833, 0.74062841, 0.8868006 , 0.55762298, 0.79574465,\n","       0.23191995, 0.11464657, 0.08967736, 0.04911439, 0.83504305,\n","       0.95459413, 0.94653966, 0.57877081, 0.28585171, 0.85938408,\n","       0.9527936 , 0.3857041 , 0.78519594, 0.58322747, 0.14522708,\n","       0.9746622 , 0.08855253, 0.73135131, 0.52890178, 0.98091496])"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["k1.shape"],"metadata":{"id":"0Qp88_a7npWg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487038610,"user_tz":-540,"elapsed":370,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"75546f4f-8607-422b-cf24-0fc8a1d4d94b"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(30,)"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["## 배열 이어 붙이기\n","https://numpy.org/doc/stable/reference/generated/numpy.concatenate.html"],"metadata":{"id":"xm8EHjaIn1hZ"}},{"cell_type":"code","source":["# 2차원 배열인 array1과 array2 생성\n","array1 = np.array([[1, 2], [3, 4]])\n","print(\"Array 1 is \\n\", array1, \" with dimensions \", array1.shape, \"\\n\")\n","\n","array2 = np.array([[5, 6]])\n","print(\"Array 2 is \\n\", array2, \" with dimensions \", array2.shape, \"\\n\")"],"metadata":{"id":"hRMcI_MvoH8I","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487056711,"user_tz":-540,"elapsed":429,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"8c111180-9590-471f-adc5-4991f359f2ab"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Array 1 is \n"," [[1 2]\n"," [3 4]]  with dimensions  (2, 2) \n","\n","Array 2 is \n"," [[5 6]]  with dimensions  (1, 2) \n","\n"]}]},{"cell_type":"markdown","source":["배열을 이어붙일 때에는 기준이 되는 축 이외에 모양이 동일해야 합니다.<br>\n","1. (2, 2)와 (1, 2) 이어 붙일 때 0번 축으로 이어붙이면 (3, 2) 배열 탄생\n","2. (2, 2)와 (1, 2) 이어 붙일 때 1번 축으로 이어붙이면 0번 축의 모양이 서로 다르므로 이어붙이기 실패"],"metadata":{"id":"Fd0IA5TboYWU"}},{"cell_type":"code","source":["# TODO: 0번 축을 기준으로 array1과 array2를 이어붙이세요.\n","concatenated_array1 = np.concatenate((array1,array2),0)\n","print(\"Concatenated array 1 along axis 0 (row-wise for 2-d arrays) is \\n\", concatenated_array1, \"with dimensions \", concatenated_array1.shape, '\\n')"],"metadata":{"id":"2cAvPXwjo1c4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487173212,"user_tz":-540,"elapsed":451,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"c22e5efe-a79a-4c5f-c2ac-48cb3855a90e"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Concatenated array 1 along axis 0 (row-wise for 2-d arrays) is \n"," [[1 2]\n"," [3 4]\n"," [5 6]] with dimensions  (3, 2) \n","\n"]}]},{"cell_type":"code","source":["# TODO: 1번 축을 기준으로 array1과 array2를 이어붙이세요. (실패합니다. 에러 메시지를 확인하세요.)\n","concatenated_array2 = np.concatenate((array1,array2),1)\n","print(\"Concatenated array 2 along axis 0 (column-wise for 2-d arrays) is \\n\", concatenated_array2, \"with dimensions \", concatenated_array2.shape)"],"metadata":{"id":"aOCDXVggrJHk","colab":{"base_uri":"https://localhost:8080/","height":184},"executionInfo":{"status":"error","timestamp":1710487186230,"user_tz":-540,"elapsed":316,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"4e88c7f8-d9a3-4ece-a308-a117d0eedfff"},"execution_count":19,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"all the input array dimensions except for the concatenation axis must match exactly, but along dimension 0, the array at index 0 has size 2 and the array at index 1 has size 1","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-da757177a28f>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# TODO: 1번 축을 기준으로 array1과 array2를 이어붙이세요. (실패합니다. 에러 메시지를 확인하세요.)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mconcatenated_array2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcatenate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0marray2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Concatenated array 2 along axis 0 (column-wise for 2-d arrays) is \\n\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconcatenated_array2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"with dimensions \"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconcatenated_array2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: all the input array dimensions except for the concatenation axis must match exactly, but along dimension 0, the array at index 0 has size 2 and the array at index 1 has size 1"]}]},{"cell_type":"code","source":["# TODO: (3, 4, 5) 형태에 0 이상 3 미만의 무작위 정수로 채워진 배열을 만드세요.\n","# https://numpy.org/doc/stable/reference/random/generated/numpy.random.randint.html\n","array1 =np.random.randint(0,3,(3,4,5))\n","print(\"Array 1 is \\n\", array1, \" with dimensions \", array1.shape, \"\\n\")"],"metadata":{"id":"7q245PFzpcru","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487218487,"user_tz":-540,"elapsed":5,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"36ff5fbe-cc13-4fb1-ce18-a967518592af"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Array 1 is \n"," [[[0 1 1 1 2]\n","  [1 2 1 2 2]\n","  [0 1 2 0 2]\n","  [0 2 0 0 0]]\n","\n"," [[2 1 0 2 2]\n","  [2 0 2 1 0]\n","  [0 2 1 0 1]\n","  [2 0 1 1 2]]\n","\n"," [[0 1 2 1 0]\n","  [1 2 0 1 0]\n","  [0 1 0 2 0]\n","  [1 1 0 1 1]]]  with dimensions  (3, 4, 5) \n","\n"]}]},{"cell_type":"code","source":["# TODO: (3, 4, 5) 형태에 0 이상 4 미만의 무작위 정수로 채워진 배열을 만드세요.\n","array2 =np.random.randint(0,4,(3,4,5))\n","print(\"Array 2 is \\n\", array2, \" with dimensions \", array2.shape, \"\\n\")"],"metadata":{"id":"m5iEk018rkG4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487232513,"user_tz":-540,"elapsed":4,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"9f74339e-ab2c-4a51-9036-65e5f0fa1ee0"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Array 2 is \n"," [[[2 0 0 0 2]\n","  [2 1 0 2 2]\n","  [1 3 0 0 0]\n","  [3 2 3 1 2]]\n","\n"," [[0 2 3 1 3]\n","  [0 3 2 0 1]\n","  [0 0 3 2 3]\n","  [3 2 0 0 3]]\n","\n"," [[1 3 0 2 1]\n","  [2 1 0 0 1]\n","  [0 0 0 2 0]\n","  [3 2 0 3 0]]]  with dimensions  (3, 4, 5) \n","\n"]}]},{"cell_type":"markdown","source":["***TODO: 0번 축을을 기준으로 이어붙이기***\n","* Q: 어떤 모양일까요? (코딩으로 결과 확인 전에 작성해보세요.)\n","* A: 6 X 4 X 5"],"metadata":{"id":"EaUNbC5sr8gy"}},{"cell_type":"code","source":["# TODO: 0번 축을 기준으로 이어붙이기\n","concatenated_array1 = np.concatenate((array1,array2),0)\n","print(\"Concatenated array 1 is \\n\", concatenated_array1, \"\\n\\n\", \"and the dimensions of the concatenated array 1 are: \\n\", concatenated_array1.shape)"],"metadata":{"id":"kapJeOHXqgGW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487373842,"user_tz":-540,"elapsed":416,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"39d34e45-088a-4e40-9fec-ea637c57c800"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Concatenated array 1 is \n"," [[[0 1 1 1 2]\n","  [1 2 1 2 2]\n","  [0 1 2 0 2]\n","  [0 2 0 0 0]]\n","\n"," [[2 1 0 2 2]\n","  [2 0 2 1 0]\n","  [0 2 1 0 1]\n","  [2 0 1 1 2]]\n","\n"," [[0 1 2 1 0]\n","  [1 2 0 1 0]\n","  [0 1 0 2 0]\n","  [1 1 0 1 1]]\n","\n"," [[2 0 0 0 2]\n","  [2 1 0 2 2]\n","  [1 3 0 0 0]\n","  [3 2 3 1 2]]\n","\n"," [[0 2 3 1 3]\n","  [0 3 2 0 1]\n","  [0 0 3 2 3]\n","  [3 2 0 0 3]]\n","\n"," [[1 3 0 2 1]\n","  [2 1 0 0 1]\n","  [0 0 0 2 0]\n","  [3 2 0 3 0]]] \n","\n"," and the dimensions of the concatenated array 1 are: \n"," (6, 4, 5)\n"]}]},{"cell_type":"markdown","source":["***TODO: 1번 축을 기준으로 이어붙이기***\n","* Q: 어떤 모양일까요? (코딩으로 결과 확인 전에 작성해보세요.)\n","* A: 3 X 4 X 10 (답은 3 X 8 X 5)"],"metadata":{"id":"iZNFj2LnsQ6U"}},{"cell_type":"code","source":["# TODO: 1번 축을 기준으로 이어붙이기\n","concatenated_array2 =   np.concatenate((array1,array2),1)\n","print(\"Concatenated array 2 is \\n\", concatenated_array2, \"\\n\\n\", \"and the dimensions of the concatenated array 2 are: \\n\", concatenated_array2.shape)"],"metadata":{"id":"iFZden1jsUGs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487444252,"user_tz":-540,"elapsed":312,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"25f05926-9663-478d-8482-51845561e4a1"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Concatenated array 2 is \n"," [[[0 1 1 1 2]\n","  [1 2 1 2 2]\n","  [0 1 2 0 2]\n","  [0 2 0 0 0]\n","  [2 0 0 0 2]\n","  [2 1 0 2 2]\n","  [1 3 0 0 0]\n","  [3 2 3 1 2]]\n","\n"," [[2 1 0 2 2]\n","  [2 0 2 1 0]\n","  [0 2 1 0 1]\n","  [2 0 1 1 2]\n","  [0 2 3 1 3]\n","  [0 3 2 0 1]\n","  [0 0 3 2 3]\n","  [3 2 0 0 3]]\n","\n"," [[0 1 2 1 0]\n","  [1 2 0 1 0]\n","  [0 1 0 2 0]\n","  [1 1 0 1 1]\n","  [1 3 0 2 1]\n","  [2 1 0 0 1]\n","  [0 0 0 2 0]\n","  [3 2 0 3 0]]] \n","\n"," and the dimensions of the concatenated array 2 are: \n"," (3, 8, 5)\n"]}]},{"cell_type":"markdown","source":["***TODO: 2번 축을 기준으로 이어붙이기***\n","* Q: 어떤 모양일까요? (코딩으로 결과 확인 전에 작성해보세요.)\n","* A: 3 X 4 X 10"],"metadata":{"id":"Kb_mSmntsXJv"}},{"cell_type":"code","source":["# TODO: 2번 축을 기준으로 이어붙이기\n","# n차원 배열에 대해, i번 축은 n-i차를 생각하면 된다. 가장 높은 차수에 해당하는 곳이 0번 축이다.\n","concatenated_array3 =  np.concatenate((array1,array2),2)\n","print(\"Concatenated array 3 is \\n\", concatenated_array3, \"\\n\\n\", \"and the dimensions of the concatenated array 3 are: \\n\", concatenated_array3.shape)"],"metadata":{"id":"1SladNrFsbAq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710487607273,"user_tz":-540,"elapsed":334,"user":{"displayName":"이승헌","userId":"10348056862918872158"}},"outputId":"cf009c24-0680-4e14-8b2a-9768eb891095"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Concatenated array 3 is \n"," [[[0 1 1 1 2 2 0 0 0 2]\n","  [1 2 1 2 2 2 1 0 2 2]\n","  [0 1 2 0 2 1 3 0 0 0]\n","  [0 2 0 0 0 3 2 3 1 2]]\n","\n"," [[2 1 0 2 2 0 2 3 1 3]\n","  [2 0 2 1 0 0 3 2 0 1]\n","  [0 2 1 0 1 0 0 3 2 3]\n","  [2 0 1 1 2 3 2 0 0 3]]\n","\n"," [[0 1 2 1 0 1 3 0 2 1]\n","  [1 2 0 1 0 2 1 0 0 1]\n","  [0 1 0 2 0 0 0 0 2 0]\n","  [1 1 0 1 1 3 2 0 3 0]]] \n","\n"," and the dimensions of the concatenated array 3 are: \n"," (3, 4, 10)\n"]}]}]}